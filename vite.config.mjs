import { defineConfig } from "vite";
import { resolve } from "path";
import react from "@vitejs/plugin-react";

export default defineConfig({
	css: {
		modules: {
			scopeBehaviour: "local",
			localsConvention: "camelCase",
		},
	},
	build: {
		lib: {
			entry: resolve(__dirname, "src/main.ts"),
			formats: ["cjs"],
			fileName: () => "main.js",
		},
		rollupOptions: {
			external: [
				"obsidian",
				"electron",
				"@codemirror/autocomplete",
				"@codemirror/collab",
				"@codemirror/commands",
				"@codemirror/language",
				"@codemirror/lint",
				"@codemirror/search",
				"@codemirror/state",
				"@codemirror/view",
				"@lezer/common",
				"@lezer/highlight",
				"@lezer/lr",
			],
			output: {
				exports: "named",
				banner: `/*
THIS IS A GENERATED/BUNDLED FILE BY VITE
if you want to view the source, please visit the github repository of this plugin
*/`,
				entryFileNames: "main.js",
				sourcemap: process.env.NODE_ENV !== "production",
				format: "cjs",
				assetFileNames: (chunkInfo) => {
					// Use the first name from the names array instead of the deprecated "name" property
					const assetName =
						Array.isArray(chunkInfo.names) &&
						chunkInfo.names.length > 0
							? chunkInfo.names[0]
							: "";
					if (assetName.endsWith(".css")) {
						return "styles.css";
					}
					return "assets/[name]-[hash][extname]";
				},
			},
		},
		outDir: "./",
		emptyOutDir: false,
		sourcemap: process.env.NODE_ENV !== "production",
		minify: process.env.NODE_ENV === "production",
	},
	plugins: [react()],
});
